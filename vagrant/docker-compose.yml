version: '2'

networks:
  ci-network:
    driver: bridge

services:
 jenkins:
  container_name: jenkins
  build: ./jenkins
#  image: jenkins:alpine
  ports:
    - "8080:8080"
  links:
    - sonarqube
  networks:
    - ci-network
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/local/bin/docker:/usr/bin/docker
    - /opt/jenkins/:/var/lib/jenkins/
#    - /opt/jenkins/:/var/jenkins_home/
  depends_on:
    - sonarqube
  environment:
    - NEXUS_PORT=8081
    - SONAR_PORT=9000
    - SONAR_DB_PORT=5432

 sonarqube:
  container_name: sonarqube
  image: sonarqube:lts-alpine
  ports:
   - "9000:9000"
   - "5432:5432"
  networks:
    - ci-network
  depends_on:
    - sonardb
  environment:
   - SONARQUBE_JDBC_USERNAME=sonar
   - SONARQUBE_JDBC_PASSWORD=sonar
   - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
   
 sonardb:
  container_name: sonardb
  networks:
    - ci-network
  #image: postgres
  # unofficial alpine based postgre
  image: kiasaki/alpine-postgres
  environment:
   - POSTGRES_USER=sonar
   - POSTGRES_PASSWORD=sonar
  volumes:
    - /opt/postgres/data:/var/lib/postgresql/data
    
 gogs:
  container_name: gogs
  networks:
    - ci-network
  image: gogs/gogs
  ports:
   - "10022:22"
   - "3000:3000"
  depends_on:
    - gogsdb
  # TODO move these to custom/conf/app.ini
  environment:
   - DB_TYPE=postgres
   - HOST=gogsdb:5432
   - NAME=gogs
   - USER=gogs
   - PASSWD=gogs   
  volumes:
    - /var/gogs:/data

 gogsdb:
  container_name: gogsdb
  networks:
    - ci-network
  image: kiasaki/alpine-postgres
  environment:
   - POSTGRES_USER=gogs
   - POSTGRES_PASSWORD=gogs
  volumes:
    - /opt/gogsdb/data:/var/lib/postgresql/data
